<?php
// $Id$

/**
 * @file
 * Install Mica module.
 */

/**
 * Implements hook_install().
 */
function mica_install() {
  mica_add_page('Data Access', '', 'data-access');
  mica_add_page('Research', '', 'research');
  mica_add_page('Resources', '', 'resources');
  mica_add_page('Consortium Policies and Guidelines', '', 'data-access/policy');
  
  $spec = array(
    'description' => 'An array of additional arguments configuring this index.',
    'type' => 'text',
    'size' => 'big',
    'serialize' => TRUE,
    'not null' => TRUE,
  );
  db_change_field('search_api_index', 'options', 'options', $spec);
}

function mica_add_page($title, $body, $alias) {
  $node = new stdClass();
  $node->type = 'page';
  node_object_prepare($node);
  $node->title = $title;
  $node->body = array(
    LANGUAGE_NONE => array(
      array('value' => $body)
    )
  );
  $node->promote = 0;
  $node->comment = COMMENT_NODE_CLOSED;
  $node->sticky = 0;
  $node->language = LANGUAGE_NONE;
  node_save($node);

  if (isset($alias)) {
    $path = array('alias' => $alias);
    $path['source'] = 'node/' . $node->nid;
    $path['language'] = LANGUAGE_NONE;
    path_save($path);
  }
  
  return $node;
}

/**
 * Implements hook_schema()
 */
function mica_schema() {
	
  $schema['mica_relation'] = array(
    'description' => 'Stores relations between content types',
    'fields' => array(
  		'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique relation ID',
      ),
      'parent_bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The parent content type machine name',
      ),
      'child_bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The child content type machine name',
      ),
      'label' => array(
        'description' => 'The human-readable name to be displayed for this relation.',
        'type' => 'varchar',
        'length' => 80,
        'not null' => TRUE,
      ),      
      'enabled' => array(
        'description' => 'A flag indicating whether the relation is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'options' => array(
        'description' => 'The options used to configure the relation.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'parent_index' => array('parent_bundle'),
      'enabled' => array('enabled'),
    ),
    'unique keys' => array(
      'unique_child' => array('child_bundle'),
    ),    
    'primary key' => array('id'),    
  );
  return $schema;	
}

/**
* Update script for release 1.1 
* Implements hook_update_N()
*/
function mica_update_7110(&$sandbox) {
  
  watchdog('mica', 'Update to Mica 1.1', array(), WATCHDOG_INFO);  
  
  // disable old facet module
  module_disable(array('search_api_facets'));
  
}
