<?php
/**
 * @file
 * Code for the Mica Networks module.
 */

include_once 'mica_networks.features.inc';


/**
 * Implements hook_create_default_content().
 */
function mica_networks_create_default_content() {
  $menu = mica_core_create_menu(st('Networks'), 'networks', 'networks', FALSE, FALSE, 6);
  mica_core_set_menu_option('network', $menu['mlid']);
}

/**
 * Implements hook_node_view()
 */
function mica_networks_node_view($node, $view_mode, $langcode) {
  if ($node->type === 'network') {
    _mica_networks_network_view($node, $view_mode, $langcode);
  }
}

function _mica_networks_network_view($node, $view_mode, $langcode) {
  // Show moderation state messages if we're on a node page.
  if (node_is_page($node) && $view_mode === 'banner_area' && empty($node->in_preview)) {
    workbench_moderation_messages('view', $node);
  }
}

/**
 * Implements hook_node_insert()
 */
function mica_networks_node_insert($node) {
  switch ($node->type) {
    case 'network':
      mica_core_create_node_menu($node, TRUE, FALSE, 0, 'networks');
      break;
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function mica_networks_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $links = array();
  if ($root_path === 'networks') {
    if (node_access('create', 'network')) {
      $node_type = node_type_load('network');
      $links['add-network'] = array(
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Add a !name', array('!name' => $node_type->name)),
          'href' => 'node/add/network',
        ),
      );
    }
  }
  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
}


function mica_networks_menu() {
  $items = array();
  $items['admin/config/development/mica_network'] = array(
    'title' => 'Mica Network',
    'description' => 'development tools for Mica',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_mica_networks_add_index'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function _mica_networks_add_index() {
  $form['run'] = array(
    '#type' => 'submit',
    '#value' => t('_mica_networks_add_networks_to_studies_index'),
    '#submit' => array('_mica_networks_add_networks_to_studies_index'),
  );
  return $form;
}

function mica_networks_features_rebuild_completed() {
  debug('mica_networks_features_rebuild_completed');
  _mica_networks_configure_permissions();
}

function _mica_networks_configure_permissions() {
  _mica_networks_configure_role_permissions('network reviewer',
    array(
      'access workbench' => TRUE,
      'view moderation history' => TRUE,
      'view moderation messages' => TRUE,
      'use workbench_moderation my drafts tab' => TRUE,
      'use workbench_moderation needs review tab' => TRUE,
      'moderate content from draft to needs_review' => TRUE,
      'moderate content from needs_review to draft' => TRUE,
      'moderate content from needs_review to published' => TRUE,
    )
  );

  _mica_networks_configure_role_permissions('network administrator',
    array(
      'access workbench' => TRUE,
      'view moderation history' => TRUE,
      'view moderation messages' => TRUE,
      'use workbench_moderation my drafts tab' => TRUE,
      'moderate content from draft to needs_review' => TRUE,
      'moderate content from needs_review to draft' => TRUE,
    )
  );
}

function _mica_networks_configure_role_permissions($role_name, $permissions) {
  $role = user_role_load_by_name($role_name);
  if ($role) {
    user_role_change_permissions($role->rid, $permissions);
  }
}