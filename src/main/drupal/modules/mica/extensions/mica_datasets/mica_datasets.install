<?php

/**
 * @file
 * Install, update and uninstall functions for the Mica Datasets module.
 */

/**
 * Implements hook_install().
 */
function mica_datasets_install() {
//  watchdog('mica', 'Import Dataschemas dimensions', array(), WATCHDOG_INFO);
//  _mica_datasets_taxonomies_batch_import();
//  _mica_datasets_taxonomies_import();
}

/**
 * Implements hook_schema().
 */
function mica_datasets_schema() {
  $schema['mica_dataset_connector'] = array(
    'description' => 'Stores all dataset connectors created through Mica Datasets.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a connector.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The displayed name for a connector.',
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The displayed description for a connector.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'dataset_id' => array(
        'description' => 'The dataset identifier for a connector.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'study_id' => array(
        'description' => 'The study identifier for a connector.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'class' => array(
        'description' => 'The id of the connection class to use for this connector.',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
      ),
      'options' => array(
        'description' => 'The options used to configure the service object.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
      'enabled' => array(
        'description' => 'A flag indicating whether the connector is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('enabled','study_id','dataset_id'),
    ),
    'primary key' => array('id'),
  );
  
    $schema['mica_dataset_query'] = array(
    'description' => 'Stores all the queries that are to be applied to their associated Mica Datasets.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a query.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The displayed name for a query.',
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The displayed description for a query.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'dataset_id' => array(
        'description' => 'The dataset identifier for a query.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'user_id' => array(
        'description' => 'The query author identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'published' => array(
        'description' => 'A flag indicating whether the query is available to users that are not the author.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('published','user_id','dataset_id'),
    ),
    'primary key' => array('id'),
  );
  
  $schema['mica_dataset_query_term'] = array(
    'description' => 'Stores the query terms of a query.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a query term.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'query_id' => array(
        'description' => 'The query identifier for a query term.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'variable_id' => array(
        'description' => 'The variable identifier for a query term.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => 'The weight of a term in its query.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'depth' => array(
        'description' => 'The depth of a term in its query.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'options' => array(
        'description' => 'The options that describe the query term.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('query_id'),
    ),
    'primary key' => array('id'),
  );
  
  return $schema;
}

function _mica_datasets_taxonomies_import() {
  $taxonomies = array(
    'anthropometric_structures.csv' => 'Anthropometric Structures',
    'body_functions.csv'=> 'Body Functions',
    'body_structures.csv'=> 'Body Structures',
    'class.csv'=> 'Class',
    'data_source.csv'=> 'Data Source',
    'disease_history.csv'=> 'Diseases History and Related Health Problems',
    'early_life.csv'=> 'Participant\'s Early Life/Childhood',
    'format.csv'=> 'Format',
    'life_habits_behaviours.csv'=> 'Life Habits/Behaviours',
    'medical_health_intervention.csv'=> 'Medical Health Interventions/Health Services Utilization',
    'medication.csv'=> 'Medication',
    'perception_of_health.csv'=> 'Perception of Health/Quality of life',
    'period.csv'=> 'Period',
    'physical_environment.csv'=> 'Physical Environment',
    'reproductive_history.csv'=> 'Reproductive Health and History',
    'response_unit.csv'=> 'Response Unit',
    'social_environment.csv'=> 'Social Environment',
    'sociodemographic_characteristics.csv'=> 'Sociodemographic/Socioeconomic Characteristics',
    'target.csv'=> 'Target',
    'target_gender.csv'=> 'Target Gender',
  );
  foreach($taxonomies as $filename => $vocabulary_name) {
    _mica_datasets_taxonomy_import($filename, $vocabulary_name);
  }
}

function _mica_datasets_taxonomies_batch_import() {
  $batch = array(
    'operations' => array(
      array('_mica_datasets_taxonomy_import', array('anthropometric_structures.csv', 'Anthropometric Structures')),
      array('_mica_datasets_taxonomy_import', array('body_functions.csv', 'Body Functions')),
      array('_mica_datasets_taxonomy_import', array('body_structures.csv', 'Body Structures')),
      array('_mica_datasets_taxonomy_import', array('class.csv', 'Class')),
      array('_mica_datasets_taxonomy_import', array('data_source.csv', 'Data Source')),
      array('_mica_datasets_taxonomy_import', array('disease_history.csv', 'Diseases History and Related Health Problems')),
      array('_mica_datasets_taxonomy_import', array('early_life.csv', 'Participant\'s Early Life/Childhood')),
      array('_mica_datasets_taxonomy_import', array('format.csv', 'Format')),
      array('_mica_datasets_taxonomy_import', array('life_habits_behaviours.csv', 'Life Habits/Behaviours')),
      array('_mica_datasets_taxonomy_import', array('medical_health_intervention.csv', 'Medical Health Interventions/Health Services Utilization')),
      array('_mica_datasets_taxonomy_import', array('medication.csv', 'Medication')),
      array('_mica_datasets_taxonomy_import', array('perception_of_health.csv', 'Perception of Health/Quality of life')),
      array('_mica_datasets_taxonomy_import', array('period.csv', 'Period')),
      array('_mica_datasets_taxonomy_import', array('physical_environment.csv', 'Physical Environment')),
      array('_mica_datasets_taxonomy_import', array('reproductive_history.csv', 'Reproductive Health and History')),
      array('_mica_datasets_taxonomy_import', array('response_unit.csv', 'Response Unit')),
      array('_mica_datasets_taxonomy_import', array('social_environment.csv', 'Social Environment')),
      array('_mica_datasets_taxonomy_import', array('sociodemographic_characteristics.csv', 'Sociodemographic/Socioeconomic Characteristics')),
      array('_mica_datasets_taxonomy_import', array('target.csv', 'Target')),
      array('_mica_datasets_taxonomy_import', array('target_gender.csv', 'Target Gender')),
    ),
    'title' => st('Import Dataschemas dimensions'),
    'init_message' => st('Starting Dataschemas dimensions import'),
    'error_message' => st('Error while importing Dataschemas dimensions'),
    'finished' => '_mica_datasets_taxonomies_batch_import_finished',
  );
  batch_set($batch);
  batch_process();
}

function _mica_datasets_taxonomies_batch_import_finished($success, $results, $operations) {
  drupal_set_message(t("Dataschemas dimensions import finished"));
}

function _mica_datasets_taxonomy_import($filename, $vocabulary_name) {

  watchdog('mica', 'filename: %path, vocabulary_name: %file',
    array(
      '%path' => $filename,
      '%file' => $vocabulary_name,
    ), WATCHDOG_INFO);


  // use filename (without extension) for vocabulary machine name
  $vocabulary = (object) array(
    'name' => $vocabulary_name,
    'machine_name' => substr($filename, 0, strlen($filename) - 4)
  );
  taxonomy_vocabulary_save($vocabulary);

  $path = drupal_get_path('module', 'mica_datasets') . '/taxonomies/' . $filename;
  $file_path = drupal_realpath($path);


  watchdog('mica', 'Path: %path, File path: %file',
    array(
      '%path' => $path,
      '%file' => $file_path,
    ), WATCHDOG_INFO);

  $result  = taxonomy_csv_import(array(
    'import_format' => 'tree_structure',
    'delimiter' => ',',
    'enclosure' => '"',
    'keep_order' => true,
    'file' => (object) array(
      'filename' => $filename,
      'filepath' => $file_path,
      'filesize' => filesize($path)
    ),
    'vocabulary_target' => 'existing',
    'vocabulary_id' => $vocabulary->vid
  ));

  watchdog('mica', 'Imported taxonomy %file to vocabulary %vocabulary: %result',
    array(
      '%file' => $file_path,
      '%vocabulary' => $vocabulary_name,
      '%result' => $result,
    ), WATCHDOG_INFO);

}
