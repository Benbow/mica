<?php

/**
 * @file
 * Install, update and uninstall functions for the Mica Datasets module.
 */

/**
 * Implements hook_install().
 */
function mica_datasets_install() {
  _mica_datasets_import_field_groups();
}

/**
 * Implements hook_schema().
 */
function mica_datasets_schema() {
  $schema['mica_dataset_connector'] = array(
    'description' => 'Stores all dataset connectors created through Mica Datasets.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a connector.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The displayed name for a connector.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The displayed description for a connector.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'dataset_id' => array(
        'description' => 'The dataset identifier for a connector.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'study_id' => array(
        'description' => 'The study identifier for a connector.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'class' => array(
        'description' => 'The id of the connection class to use for this connector.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'options' => array(
        'description' => 'The options used to configure the service object.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
      'enabled' => array(
        'description' => 'A flag indicating whether the connector is enabled.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('enabled','study_id','dataset_id'),
    ),
    'primary key' => array('id'),
  );
  
    $schema['mica_dataset_query'] = array(
    'description' => 'Stores all the queries that are to be applied to their associated Mica Datasets.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a query.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'The displayed name for a query.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'The displayed description for a query.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'dataset_id' => array(
        'description' => 'The dataset identifier for a query.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'user_id' => array(
        'description' => 'The query author identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'published' => array(
        'description' => 'A flag indicating whether the query is available to users that are not the author.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('published','user_id','dataset_id'),
    ),
    'primary key' => array('id'),
  );
  
  $schema['mica_dataset_query_term'] = array(
    'description' => 'Stores the query terms of a query.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for a query term.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'query_id' => array(
        'description' => 'The query identifier for a query term.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'variable_id' => array(
        'description' => 'The variable identifier for a query term.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => 'The weight of a term in its query.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'depth' => array(
        'description' => 'The depth of a term in its query.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'options' => array(
        'description' => 'The options that describe the query term.',
        'type' => 'text',
        'serialize' => TRUE,
        'not null' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'indexes' => array(
      'indexing' => array('query_id'),
    ),
    'primary key' => array('id'),
  );
  
  return $schema;
}

/**
 * Register some field groups at module install.
 */
function _mica_datasets_import_field_groups() {
  module_load_include('inc', 'mica', 'includes/fieldgroups');

  // STUDY
  _mica_add_fieldset_group('study','group_datasets', 'Datasets', '4', '', array(
    'mica_dataset',
    'mica_opal',
  ));
  
  // PARTICIPANT VARIABLES
  _mica_add_fieldset_group('participant_variable', 'group_participant_variable', 'Description', '1', '', array(
  	'field_label',
  	'body',
  	'field_value_type',
  	'field_repeatable',
  	'field_categories',
  	'field_dataset'
  ));
}
