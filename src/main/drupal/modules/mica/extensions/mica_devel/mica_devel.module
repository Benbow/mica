<?php

/**
 * @file
 * Code for the mica_devel feature.
 */

include_once('mica_devel.features.inc');

function mica_devel_menu() {
  $items = array();
  $items['admin/config/development/mica_modules_graph'] = array(
    'title' => 'Mica module dependencies graph',
    'description' => 'Graph of dependencies of mica modules',
    'page callback' => '_mica_devel_modules_graph',
    'access arguments' => array('administer site configuration'),
  );
  $items['admin/config/development/mica'] = array(
    'title' => 'Mica Devel',
    'description' => 'development tools for Mica',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_mica_devel_form'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

function _mica_devel_form() {

  $form['menu_rebuild'] = array(
    '#type' => 'fieldset',
    '#title' => t('Rebuild menus'),
    '#description' => t('(Re)populate the database tables used by various menu functions.'),
  );
  $form['menu_rebuild']['rebuild'] = array(
    '#type' => 'submit',
    '#value' => t('Rebuild menus'),
    '#submit' => array('menu_rebuild'),
  );

  $form['rebuild_registry'] = array(
    '#type' => 'fieldset',
    '#title' => t('Rebuild registry'),
    '#description' => t('Rescans all code in modules or includes directories, storing the location of each interface or class in the database.'),
  );
  $form['rebuild_registry']['rebuild'] = array(
    '#type' => 'submit',
    '#value' => t('Rebuild'),
    '#submit' => array('_mica_devel_rebuild_registry'),
  );

  $form['dummy'] = array(
    '#type' => 'fieldset',
    '#title' => t('Example'),
    '#description' => t('Form example to run custom actions'),
  );
  $form['dummy']['run'] = array(
    '#type' => 'submit',
    '#value' => t('Run dummy method'),
    '#submit' => array('_mica_devel_dummy_run'),
  );

  return $form;
}

function _mica_devel_rebuild_registry() {
  module_load_install('mica_core');
  _mica_core_rebuild_registry();
}

function _mica_devel_modules_graph() {
  $graph = array();
  $modules = system_rebuild_module_data();
  foreach ($modules as $module => $data) {
    if (_mica_devel_is_mica_module($module) && (!isset($data->info['hidden']) || !$data->info['hidden'])) {
      $graph[$module]['edges'] = array();
      foreach ($data->info['dependencies'] as $key) {
        if (_mica_devel_is_mica_module($key) && $module != $key) {
          $graph[$module]['edges'][$key] = 1;
        }
      }
      $graph[$module]['data'] = array(
        'title' => $module,
        'content' => print_r($data, TRUE),
        'background-color' => "#00ff00",
      );
    }
  }
  //  dpm($graph);
  $config = array(
    'id' => 'mica_modules_graph',
    'width' => 900,
    'height' => 700,
    'engine' => 'graph_phyz',
    'menu' => TRUE,
    'background-color' => '#ccc',
    'animate' => TRUE,
    'randomize' => TRUE,
    'showForces' => FALSE,
    'applyAttractToCenter' => TRUE,
    'applyBoundingBox' => TRUE,
    'applyBoxOverlap' => TRUE,
    'applyCoulombsLaw' => TRUE,
    'applyDamping' => TRUE,
    'applyHookesLaw' => TRUE,
    'applyCompass' => TRUE,
  );
  return theme('graphapi_dispatch', array('graph' => $graph, 'config' => $config));
}

function _mica_devel_is_mica_module($module) {
  return substr($module, 0, strlen("mica")) === "mica";
}

function _mica_devel_dummy_run() {
  drupal_set_message(t("Run dummy method..."));
}
