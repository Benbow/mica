<?php
/**
 * @file
 * Code for the Mica DataSchemas feature.
 */

include_once('mica_dataschemas.features.inc');
include_once DRUPAL_ROOT . '/modules/menu/menu.admin.inc';


/**
 * Implements hook_form().
 */
function mica_dataschemas_form($node, &$form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_install().
 */
function mica_dataschemas_install() {
  $plid  = _get_mlid('node/3');

  $path = drupal_get_normal_path($GLOBALS['base_url'] .'/?q=dataschemas');

  $form_state = array(
    'values' => array(
      'menu_name'   => 'main-menu',
      'weight'      => 0,
      'link_title'  => 'DataSchemas',
      'link_path'   => $path,
      'module'      => 'menu',
      'mlid'        => 0,
      'plid'        => $plid,
  ),
  );

  // Validate and transform the item, so it conforms with Drupal standards.
  menu_edit_item_validate(array(), $form_state);

  // Save the item to database.
  menu_link_save($form_state['values']);

  _mica_dataschemas_createTaxonomy();

  menu_cache_clear_all();
}

/**
 * Implements hook_node_insert()
*/
function mica_dataschemas_insert(&$node) {
  debug($node->nid);
  if ($node->type === 'dataschema') {
    $node->field_variables['und'] = array(
      0 => array('view_id' => 'dataschema_variables:page', 'arguments' => $node->nid)
    );
  }
  debug($node->field_variables);
  return;
}

/**
 * Implements hook_field_attach_form()
 */
function mica_dataschemas_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  if ($entity_type == 'node' && $entity->type == 'dataschema') {
    // 		$form['field_variables']['#attributes']['style'] = array('display:none;');
  }
  /*elseif ($entity_type == 'node' && $entity->type == 'ds_variable') {
   // preselect project when specified in the url
  if (isset($_GET['field_dataschemas'])) {
  $project_id = $_GET['field_project'];
  if (isset($form['field_project'][LANGUAGE_NONE]['#options'][$project_id])) {
  $form['field_project'][LANGUAGE_NONE]['#value'] = $project_id;
  }
  }
  }*/
}

/**
* Implements hook_menu_local_tasks_alter().
*/
function mica_dataschemas_menu_local_tasks_alter(&$data, $router_item, $root_path) {
	$links = array();

	if ($root_path == 'node/%') {
		$node = node_load($router_item['page_arguments'][0]->nid);
		if ($node != NULL && $node->type == 'dataschema') {
			if (node_access('view', $node)) {
				// highlight queries
				foreach ($data['actions']['output'] as $key => $link) {
					if (isset($link['#link']['path']) && $link['#link']['path'] == 'node/%/queries') {
						$data['actions']['output'][$key]['#link']['localized_options'] = array('attributes' => array('class' => 'highlight'));
						$data['actions']['output'][$key]['#weight'] = 40;
						break;
					}
				}

				// add DataSchema variables
				$name = t('DataSchema Variables');
				$href = url('dataschema-variables') .'&filter[field_dataschema_ref][0]="' . $router_item['page_arguments'][0]->nid . '"';
				$links['view-dataschema-variables'] = array(
  					'#weight' => 30,
            		'#theme' => 'menu_local_action',
            		'#link' => array(
              			'title' => t('<a class="highlight" href="@url">!name</a>', array('!name' => $name, '@url' => $href)),
              			'localized_options' => array('html' => TRUE),
				),
				);
			}
		}
	}

	$data['actions']['output'] = array_merge($data['actions']['output'], $links);
}

function _get_mlid($path) {
	$mlid = null;

	$tree =  menu_tree_all_data('main-menu');
	foreach($tree as $item) {
		if ($item['link']['link_path'] == $path) {
			$mlid = $item['link']['mlid'];
			break;
		}
	}

	return $mlid;
}

function _mica_dataschemas_createTaxonomy() {
  $taxonomies = array(
    array(
      "vocabulary" => (object) array('name' => 'Class', 'machine_name' => 'class'),
      "terms" => array(
        'Age' => array('name' => 'Age'),
        'Age of onset' => array('name' => 'Age of onset', 'parent' => 'Age'),
        'Date/time' => array('name' => 'Date/time'),
        'Frequency' => array('name' => 'Frequency'),
        'Identification' => array('name' => 'Identification'),
        'Localization' => array('name' => 'Localization'),
        'Occurence' => array('name' => 'Occurence'),
        'Quantity' => array('name' => 'Quantity'),
        'Status' => array('name' => 'Status')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Collection mode', 'machine_name' => 'collection_mode'),
      "terms" => array(
        'Direct measure' => array('name' => 'Direct measure'),
        'Inventory' => array('name' => 'Inventory'),
        'Questionnaire' => array('name' => 'Questionnaire')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Format', 'machine_name' => 'format'),
      "terms" => array(
        'Categorical' => array('name' => 'Categorical'),
        'Open' => array('name' => 'Open')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Medical health intervention', 'machine_name' => 'medical_health_intervention'),
      "terms" => array(
        'Therapeutic intervention on the digestive system' => array('name' => 'Therapeutic intervention on the digestive system'),
        'Colon polypectomy' => array('name' => 'Colon polypectomy', 'parent' => 'Therapeutic intervention on the digestive system'),
        'Therapeutic interventions on the urinary system' => array('name' => 'Therapeutic interventions on the urinary system'),
        'Hemodialysis' => array('name' => 'Hemodialysis', 'parent' => 'Therapeutic interventions on the urinary system'),
        'Kidney transplant' => array('name' => 'Kidney transplant', 'parent' => 'Therapeutic interventions on the urinary system'),
        'Peritoneal dialysis' => array('name' => 'Peritoneal dialysis', 'parent' => 'Therapeutic interventions on the urinary system')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Period', 'machine_name' => 'period'),
      "terms" => array(
        'Currently' => array('name' => 'Currently'),
        'For a specific period currently' => array('name' => 'For a specific period currently', 'parent' => 'Currently'),
        'In the past' => array('name' => 'In the past'),
        'For a specific period in the past' => array('name' => 'For a specific period in the past', 'parent' => 'In the past'),
        'Through all life' => array('name' => 'Through all life'),
        'For a specific period through all life' => array('name' => 'For a specific period through all life', 'parent' => 'Through all life')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Sample', 'machine_name' => 'sample'),
      "terms" => array(
        'Buffy coat' => array('name' => 'Buffy coat'),
        'Plasma' => array('name' => 'Plasma'),
        'Red blood cells' => array('name' => 'Red blood cells'),
        'Saliva' => array('name' => 'Saliva'),
        'Serum' => array('name' => 'Serum')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Target gender', 'machine_name' => 'target_gender'),
      "terms" => array(
        'Male' => array('name' => 'Male'),
        'Female' => array('name' => 'Female')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Type', 'machine_name' => 'type'),
      "terms" => array(
        'Text' => array('name' => 'Text'),
        'Date' => array('name' => 'Date'),
        'Time' => array('name' => 'Time'),
        'Integer' => array('name' => 'Integer'),
        'Decimal' => array('name' => 'Decimal')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Target', 'machine_name' => 'target'),
      "terms" => array(
				'Instrument' => array('name' => 'Instrument'),
				'Interviewer / nurse' => array('name' => 'Interviewer / nurse'),
				'Localization' => array('name' => 'Localization'),
				'Participant' => array('name' => 'Participant'),
				'Participant relative(s)' => array('name' => 'Participant relative(s)'),
				'Child' => array('name' => 'Child', 'parent' => 'Participant relative(s)'),
				'Parent' => array('name' => 'Parent', 'parent' => 'Participant relative(s)'),
				'Father' => array('name' => 'Father', 'parent' => 'Parent'),
				'Mother' => array('name' => 'Mother', 'parent' => 'Parent'),
				'Partner' => array('name' => 'Partner', 'parent' => 'Participant relative(s)'),
				'Sibling' => array('name' => 'Sibling', 'parent' => 'Participant relative(s)'),
				'Brother' => array('name' => 'Brother', 'parent' => 'Sibling'),
				'Sister' => array('name' => 'Sister', 'parent' => 'Sibling'),
				'Support' => array('name' => 'Support'),
				'Tube' => array('name' => 'Tube', 'parent' => 'Support')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Source of information', 'machine_name' => 'source_of_information'),
      "terms" => array(
				'Clinical records / files' => array('name' => 'Clinical records / files'),
				'Instrument' => array('name' => 'Instrument'),
				'Interviewer / nurse' => array('name' => 'Interviewer / nurse'),
				'Participant' => array('name' => 'Participant'),
				'Participant relative(s)' => array('name' => 'Participant relative(s)'),
				'Child' => array('name' => 'Child', 'parent' => 'Participant relative(s)'),
				'Parent' => array('name' => 'Parent', 'parent' => 'Participant relative(s)'),
				'Father' => array('name' => 'Father', 'parent' => 'Parent'),
				'Mother' => array('name' => 'Mother', 'parent' => 'Parent'),
				'Partner' => array('name' => 'Partner', 'parent' => 'Participant relative(s)'),
				'Sibling' => array('name' => 'Sibling', 'parent' => 'Participant relative(s)'),
				'Brother' => array('name' => 'Brother', 'parent' => 'Sibling'),
				'Sister' => array('name' => 'Sister', 'parent' => 'Sibling'),
				'Registry' => array('name' => 'Registry'),
				'Support' => array('name' => 'Support'),
				'Tube' => array('name' => 'Tube', 'parent' => 'Support')
      )
    ),
    array(
      "vocabulary" => (object) array('name' => 'Disease', 'machine_name' => 'disease'),
      "terms" => array(
				'Arthritis' => array('name' => 'Arthritis'),
				'Osteoarthritis' => array('name' => 'Osteoarthritis', 'parent' => 'Arthritis'),
				'Rhumatoid arthritis' => array('name' => 'Rhumatoid arthritis', 'parent' => 'Arthritis'),
				'Asthma' => array('name' => 'Asthma'),
				'Blood clotting disorder / Hemophilia' => array('name' => 'Blood clotting disorder / Hemophilia'),
				'Cancer' => array('name' => 'Cancer'),
				'Bowel cancer' => array('name' => 'Bowel cancer', 'parent' => 'Cancer'),
				'Large bowel cancer' => array('name' => 'Large bowel cancer', 'parent' => 'Bowel cancer'),
				'Colorectal cancer' => array('name' => 'Colorectal cancer', 'parent' => 'Large bowel cancer'),
				'Colon cancer' => array('name' => 'Colon cancer', 'parent' => 'Colorectal cancer'),
				'Rectal cancer' => array('name' => 'Rectal cancer', 'parent' => 'Colorectal cancer'),
				'Breast cancer' => array('name' => 'Breast cancer', 'parent' => 'Cancer'),
				'Bronchial cancer / Lung cancer' => array('name' => 'Bronchial cancer / Lung cancer', 'parent' => 'Cancer'),
				'Prostate cancer' => array('name' => 'Prostate cancer', 'parent' => 'Cancer'),
				'Stomach cancer' => array('name' => 'Stomach cancer', 'parent' => 'Cancer'),
				'Cerebrovascular accident / Stroke' => array('name' => 'Cerebrovascular accident / Stroke'),
				'Cerebral haemorrage' => array('name' => 'Cerebral haemorrage', 'parent' => 'Cerebrovascular accident / Stroke'),
				'Ruptured cerebral aneurysm' => array('name' => 'Ruptured cerebral aneurysm', 'parent' => 'Cerebral haemorrage'),
				'Cerebral infarction / Clot in the brain' => array('name' => 'Cerebral infarction / Clot in the brain', 'parent' => 'Cerebrovascular accident / Stroke'),
				'Cerebral thrombosis resulting in stroke' => array('name' => 'Cerebral thrombosis resulting in stroke', 'parent' => 'Cerebral infarction / Clot in the brain'),
				'Chronic hepatitis' => array('name' => 'Chronic hepatitis'),
				'Chronic kidney disease (CKD)' => array('name' => 'Chronic kidney disease (CKD)'),
				'Chronic kidney disease, Stage I to IV' => array('name' => 'Chronic kidney disease, Stage I to IV', 'parent' => 'Chronic kidney disease (CKD)'),
				'End stage renal disease' => array('name' => 'End stage renal disease', 'parent' => 'Chronic kidney disease (CKD)'),
				'Chronic obstructive lung disease / Chronic obstructive pulmonary disease' => array('name' => 'Chronic obstructive lung disease / Chronic obstructive pulmonary disease'),
				'Chronic bronchitis' => array('name' => 'Chronic bronchitis', 'parent' => 'Chronic obstructive lung disease / Chronic obstructive pulmonary disease'),
				'Emphysema' => array('name' => 'Emphysema', 'parent' => 'Chronic obstructive lung disease / Chronic obstructive pulmonary disease'),
				"Crohn's  disease" => array('name' => "Crohn's  disease"),
				'Depression' => array('name' => 'Depression'),
				'Major depression / Severe depression' => array('name' => 'Major depression / Severe depression', 'parent' => 'Depression'),
				'Diabetes' => array('name' => 'Diabetes'),
				'Gestational diabetes' => array('name' => 'Gestational diabetes', 'parent' => 'Diabetes'),
				'Type 1 diabetes / Insulin-dependent diabetes mellitus (IDDM)' => array('name' => 'Type 1 diabetes / Insulin-dependent diabetes mellitus (IDDM)', 'parent' => 'Diabetes'),
				'Type 2 diabetes / Non-insulin-dependent diabetes mellitus (NIDDM)' => array('name' => 'Type 2 diabetes / Non-insulin-dependent diabetes mellitus (NIDDM)', 'parent' => 'Diabetes'),
				'Eczema' => array('name' => 'Eczema'),
				'Heart attack / Myocardial infarction' => array('name' => 'Heart attack / Myocardial infarction'),
				'High blood pressure / Hypertension' => array('name' => 'High blood pressure / Hypertension'),
				'Irritable bowel disease' => array('name' => 'Irritable bowel disease'),
				'Liver cirrhosis' => array('name' => 'Liver cirrhosis'),
				'Multiple sclerosis' => array('name' => 'Multiple sclerosis'),
				'Osteoporosis' => array('name' => 'Osteoporosis'),
				'Psoriasis' => array('name' => 'Psoriasis'),
				'Systemic lupus erythematosus' => array('name' => 'Systemic lupus erythematosus'),
				'Transient ischemic attack' => array('name' => 'Transient ischemic attack'),
				'Ulcerative colitis' => array('name' => 'Ulcerative colitis')
      )
    )
  );
  foreach($taxonomies as $taxonomy) {
    $vocabulary = $taxonomy['vocabulary'];
    taxonomy_vocabulary_save($vocabulary);
    
    $terms = $taxonomy['terms'];
    foreach($terms as $term) {
      $term['vid'] = $vocabulary->vid;
      if(isset($term['parent'])) {
        $parent_term = $terms[$term['parent']];
        $term['parent'] = $parent_term->tid;
      }
      $term = (object) $term;
      taxonomy_term_save($term);
      $terms[$term->name] = $term;
    }  
  }
}


/**
* Implements hook_search_api_processor_info().
*/
function mica_dataschemas_search_api_processor_info() {
	$processors['taxonomy_hierarchy_processor.inc'] = array(
    'name' => t('Taxonomy hierarchy'),
    'description' => t('Index taxonomy parent terms.'),
    'class' => 'SearchApiTaxonomyHierarchyProcessor',
	);
	return $processors;
}

/**
* Implements hook_entity_info_alter().
*/
function mica_dataschemas_entity_info_alter(&$entity_info) {
  var_dump($entity_info);
  $entity_info['node']['view modes']['custom_page'] = array(
    'label' => t('Custom Page Main Content'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_dimensions'] = array(
      'label' => t('Custom Page Dimension'),
      'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_variable'] = array(
        'label' => t('Custom Page Variable'),
        'custom settings' => TRUE,
  );
}

function mica_dataschemas_entity_view($entity, $type, $view_mode, $langcode){
  $title = $entity->title;
  
  if ($entity->type === 'dataschema'){
    $entity->title = 'DataSchema: ' . $title;
  }
  else if ($entity->type === 'ds_module'){
  	$entity->title = 'Module: ' . $title;
  }
  else if ($entity->type === 'ds_theme'){
  	$entity->title = 'Theme: ' . $title;
  }
  else if ($entity->type === 'ds_domain'){
  	$entity->title = 'Domain: ' . $title;
  }
}


/*function mica_dataschemas_block_info() {
  debug('BLOCK');
  $blocks['variable_cart'] = array(
    'info' => t('Variable Cart'),
    'cache' => DRUPAL_CACHE_PER_USER,
    'status' => TRUE,
    'region' => 'sidebar_first',
    'visibility' => 1, 
  );
  
  
  return $blocks;
}*/





