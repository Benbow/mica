<?php
/**
 * @file
 * Code for the Mica DataSchemas feature.
 */

include_once('mica_dataschemas.features.inc');
include_once(drupal_get_path('module', 'mica_dataschemas') . '/includes/blocks.inc');
include_once(drupal_get_path('module', 'taxonomy_csv') . '/import/taxonomy_csv.import.api.inc');

/**
 * Implements hook_form().
 */
function mica_dataschemas_form($node, &$form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_install().
 */
function mica_dataschemas_install() {
  _mica_dataschemas_import_taxonomies();
//   _mica_dataschemas_configure_facet_blocks();
}

/**
 * Implements hook_node_insert()
*/
function mica_dataschemas_insert(&$node) {
  if ($node->type === 'dataschema') {
    $node->field_variables['und'] = array(
      0 => array('view_id' => 'dataschema_variables:page', 'arguments' => $node->nid)
    );
  }
}

/**
* Implements hook_menu_local_tasks_alter().
*/
function mica_dataschemas_menu_local_tasks_alter(&$data, $router_item, $root_path) {
	$links = array();
    
	if ($root_path == 'node/%') {
		$node = node_load($router_item['page_arguments'][0]->nid);

		if ($node != NULL && $node->type == 'dataschema' && node_access('view', $node) ) {
    		$name = t('View Variables');
    		$filter_field = 'field_dataschema_ref';
		}
		
		// Add link if DataSchema
		if (isset($name)){
    		$href = url('dataschema-variables') .'&filter['.$filter_field.'][0]="' . $router_item['page_arguments'][0]->nid . '"';
    		$links['view-dataschema-variables'] = array(
        		'#weight' => 30,
          		'#theme' => 'menu_local_action',
          		'#link' => array(
            			'title' => t('<a class="highlight" href="@url">!name</a>', array('!name' => $name, '@url' => $href)),
            			'localized_options' => array('html' => TRUE),
    		    ),
    		);
    		
    		$data['actions']['output'] = array_merge($data['actions']['output'], $links);
		}
	}
}

/**
* Implements hook_entity_info_alter().
*/
function mica_dataschemas_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['custom_page'] = array(
    'label' => t('Custom Page Main Content'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_dimensions'] = array(
    'label' => t('Custom Page Dimension'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_variable'] = array(
    'label' => t('Custom Page Variable'),
    'custom settings' => TRUE,
  );
}

function mica_dataschemas_entity_view($entity, $type, $view_mode, $langcode){
  if ($entity->type === 'dataschema'){
    $entity->title = 'DataSchema: ' . $entity->title;
  }
}

function _mica_dataschemas_import_taxonomies() {
  _mica_dataschemas_import_taxonomy('biochemical_measures.csv', 'Biochemical measures');
  _mica_dataschemas_import_taxonomy('body_functions_measures.csv', 'Body functions and measures');
  _mica_dataschemas_import_taxonomy('class.csv', 'Class');
  _mica_dataschemas_import_taxonomy('collection_mode.csv', 'Collection mode');
  _mica_dataschemas_import_taxonomy('disease_history.csv', 'Disease history');
  _mica_dataschemas_import_taxonomy('environmental_exposures.csv', 'Environmental exposures');
  _mica_dataschemas_import_taxonomy('format.csv', 'Format');
  _mica_dataschemas_import_taxonomy('life_habits_behaviours.csv', 'Life habits / Behaviours');
  _mica_dataschemas_import_taxonomy('medication.csv', 'Medication');
  _mica_dataschemas_import_taxonomy('period.csv', 'Period');
  _mica_dataschemas_import_taxonomy('reproductive_history.csv', 'Reproductive history');
  _mica_dataschemas_import_taxonomy('sample.csv', 'Sample');
  _mica_dataschemas_import_taxonomy('sociodemographic_characteristics.csv', 'Sociodemographic characteristics');
  _mica_dataschemas_import_taxonomy('source_of_information.csv', 'Source of information');
  _mica_dataschemas_import_taxonomy('target_gender.csv', 'Target gender');
  _mica_dataschemas_import_taxonomy('target.csv', 'Target');
  _mica_dataschemas_import_taxonomy('therapeutic_interventions.csv', 'Therapeutic interventions');
  _mica_dataschemas_import_taxonomy('type.csv', 'Type');
}

function _mica_dataschemas_import_taxonomy($filename, $vocabulary_name) {
  // use filename (without extension) for vocabulary machine name
  $vocabulary = (object) array(
  	'name' => $vocabulary_name, 
  	'machine_name' => substr($filename, 0, strlen($filename) - 4)
  );
  taxonomy_vocabulary_save($vocabulary);
  
  $path = drupal_get_path('module', 'mica_dataschemas') . '/taxonomies/' . $filename;
  taxonomy_csv_import(array(
    'import_format' => 'tree_structure',
    'delimiter' => ',',
    'enclosure' => '"',
    'keep_order' => true,
  	'file' => (object) array(
      'filename' => $filename,
      'filepath' => drupal_realpath($path),
      'filesize' => filesize($path)
    ),
    'vocabulary_target' => 'existing',
    'vocabulary_id' => $vocabulary->vid
  ));
  drupal_set_message('Imported '. $filename .' to '. $vocabulary_name, 'status');
}

