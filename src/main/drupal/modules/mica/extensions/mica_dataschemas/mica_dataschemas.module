<?php
/**
 * @file
 * Code for the Mica DataSchemas feature.
 */

include_once('mica_dataschemas.features.inc');
include_once(drupal_get_path('module', 'taxonomy_csv') . '/import/taxonomy_csv.import.api.inc');

/**
 * Implements hook_form().
 */
function mica_dataschemas_form($node, &$form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_install().
 */
function mica_dataschemas_install() {
//   watchdog('mica', 'Create taxonomies', array(), WATCHDOG_INFO);  
//   _mica_dataschemas_import_taxonomies();
}

/**
 * Implements hook_node_insert()
*/
function mica_dataschemas_node_insert($node) {
  if ($node->type === 'dataschema') {
    mica_create_menu($node, 1);
    
    $node->field_variables[LANGUAGE_NONE] = array(
      0 => array(
      	'view_id' => 'dataschema_variables:page', 
      	'arguments' => $node->nid,
      )
    );
  }
  elseif ($node->type === 'dataschema_variable') {
    mica_create_menu($node, 1);
  }
  
  return;
}

/**
* Implements hook_field_attach_form()
*/
function mica_dataschemas_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
  if ($entity_type == 'node' && $entity->type == 'dataschema') {
    $form['field_variables']['#attributes']['style'] = array('display:none;');
  	$form['field_variables']['#attributes']['style'] = array('display:none;');
  }
}

/**
* Implements hook_menu_local_tasks_alter().
*/
function mica_dataschemas_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $links = array();
      
  if ($root_path == 'dataschemas') {
	if (node_access('create', 'dataschema')) {
	  $node_type = node_type_load('dataschema');
	  $links['add-dataschema'] = array(
      	'#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Add a !name', array('!name' => $node_type->name)),
          'href' => 'node/add/dataschema',
		),
	  );
	  
	  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
	}
  }
  elseif ($root_path == 'dataschema-variables'){
    if (node_access('create', 'dataschema-variable')) {
    	$node_type = node_type_load('dataschema-variable');
    	$links['add-dataschema'] = array(
          	'#theme' => 'menu_local_action',
            '#link' => array(
              'title' => t('Add a !name', array('!name' => $node_type->name)),
              'href' => 'node/add/dataschema-variable',
    	),
    	);
    	 
    	$data['actions']['output'] = array_merge($data['actions']['output'], $links);
    }
  }
	
  if ($root_path == 'node/%') {
  	$node = node_load($router_item['page_arguments'][0]->nid);
  
  	if ($node != NULL && $node->type == 'dataschema' && node_access('view', $node) ) {
  	  $name = t('View Variables');
  	  $filter_field = 'field_dataschema_ref';
  	}
  	
  	// Add link if DataSchema
  	if (isset($name)){
  	  $href = url('dataschema-variables') . '?f[0]=' . rawurlencode($filter_field.':' . $router_item['page_arguments'][0]->nid . '');
  	  $links['view-dataschema-variables'] = array(
  		'#weight' => 30,
    	'#theme' => 'menu_local_action',
    	'#link' => array(
    	  'title' => t('<a class="highlight" href="@url">!name</a>', array('!name' => $name, '@url' => $href)),
    	  'localized_options' => array('html' => TRUE),
        ),
  	  );
  	
  	  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
    }
  }
}

/**
* Implements hook_entity_info_alter().
*/
function mica_dataschemas_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['custom_page'] = array(
    'label' => t('Custom Page Main Content'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_dimensions'] = array(
    'label' => t('Custom Page Dimension'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['custom_variable'] = array(
    'label' => t('Custom Page Variable'),
    'custom settings' => TRUE,
  );
}

function mica_dataschemas_entity_view($entity, $type, $view_mode, $langcode){
  if (isset($entity->type) && $entity->type === 'dataschema'){
    $entity->title = 'DataSchema: ' . $entity->title;
  }
}


function _mica_dataschemas_configuration_finished($success, $results, $operations) {
	drupal_set_message(t("DataSchemas dimensions import finished"));
}
