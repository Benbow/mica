<?php
/**
 * @file
 * Code for the Mica DataSchemas feature.
 */

include_once('mica_dataschemas.features.inc');
include_once DRUPAL_ROOT . '/modules/menu/menu.admin.inc';

/**
* Implements hook_form().
*/
function mica_dataschemas_form($node, &$form_state) {
	return node_content_form($node, $form_state);
}

/**
* Implements hook_install().
*/

function mica_dataschemas_install() {
  $plid  = _get_mlid('node/3');

  $path = drupal_get_normal_path($GLOBALS['base_url'] .'/?q=dataschemas');
  
  $form_state = array(
      'values' => array(
        'menu_name'   => 'main-menu',
        'weight'      => 0,
        'link_title'  => 'DataSchemas',
        'link_path'   => $path,
        'module'      => 'menu',
        'mlid'        => 0,
        'plid'        => $plid,
      ),
  );
  
  // Validate and transform the item, so it conforms with Drupal standards.
  menu_edit_item_validate(array(), $form_state);
  
  // Save the item to database.
  menu_link_save($form_state['values']);
  
  menu_cache_clear_all();
}

/**
* Implements hook_node_insert()
*/
function mica_dataschemas_insert(&$node) {
  debug($node->nid);
	if ($node->type === 'dataschema') {
		$node->field_variables['und'] = array(
  		  0 => array(
          	'view_id' => 'dataschema_variables:page',
          	'arguments' => $node->nid,
  		  )
		);
	}
	debug($node->field_variables);
	return;
}

/**
 * Implements hook_field_attach_form()
 */
function mica_dataschemas_field_attach_form($entity_type, $entity, &$form, &$form_state, $langcode) {
	if ($entity_type == 'node' && $entity->type == 'dataschema') {
// 		$form['field_variables']['#attributes']['style'] = array('display:none;');
	}
	/*elseif ($entity_type == 'node' && $entity->type == 'ds_variable') {
		// preselect project when specified in the url
		if (isset($_GET['field_dataschemas'])) {
			$project_id = $_GET['field_project'];
			if (isset($form['field_project'][LANGUAGE_NONE]['#options'][$project_id])) {
				$form['field_project'][LANGUAGE_NONE]['#value'] = $project_id;
			}
		}
	}*/
}

/**
* Implements hook_menu_local_tasks_alter().
*/
function mica_dataschemas_menu_local_tasks_alter(&$data, $router_item, $root_path) {
	$links = array();
    
	if ($root_path == 'node/%') {
		$node = node_load($router_item['page_arguments'][0]->nid);
		if ($node != NULL && $node->type == 'dataschema') {
			if (node_access('view', $node)) {
				// highlight queries
				foreach ($data['actions']['output'] as $key => $link) {
					if (isset($link['#link']['path']) && $link['#link']['path'] == 'node/%/queries') {
						$data['actions']['output'][$key]['#link']['localized_options'] = array('attributes' => array('class' => 'highlight'));
						$data['actions']['output'][$key]['#weight'] = 40;
						break;
					}
				}

				// add participant variables
				$name = t('DataSchema Variables');
				$href = url('dataschema-variables2') .'&filter[field_dataschema_ref][0]="' . $router_item['page_arguments'][0]->nid . '"';
				$links['view-dataschema-variables'] = array(
  					'#weight' => 30,
            		'#theme' => 'menu_local_action',
            		'#link' => array(
              			'title' => t('<a class="highlight" href="@url">!name</a>', array('!name' => $name, '@url' => $href)),
              			'localized_options' => array('html' => TRUE),
				    ),
				);
			}
		}
	}

	$data['actions']['output'] = array_merge($data['actions']['output'], $links);
}
function _get_mlid($path) {
	$mlid = null;

	$tree =  menu_tree_all_data('main-menu');
	foreach($tree as $item) {
		if ($item['link']['link_path'] == $path) {
			$mlid = $item['link']['mlid'];
			break;
		}
	}

	return $mlid;
}