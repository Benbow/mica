<?php 

require_once('mica_core.features.inc');


function mica_core_node_title_exists($node_type, $title)  {
  $q = db_select('node', 'n');
  $q->addField('n', 'nid');
  $q->condition('n.type', $node_type);
  $q->condition('n.title', $title);
  $q->range(0,1);
  $result = $q->execute();
  return $result->fetchField() ? TRUE : FALSE;
}

/**
 * Creates a menu for the item being created if the content type as a default menu set.
 * The menu entry is hidden; this is useful to populate the breadcrumbs without having to manually add a menu entry.
 * @param $node
 * @param $hidden 1 to hide this menu, 0 to show it
 */
function mica_core_create_menu($node, $hidden = 0) {
  // create menu based on content type menu config
  $menu = $node->menu;
  if (empty($menu)) {
    $menu = array();
  }
  if (empty($menu['enabled']) || !$menu['enabled']) {

    $menu_options = variable_get('menu_options_' . $node->type);

    if (!empty($menu_options)) {
      $menu['enabled'] = 0;
      $menu['hidden'] = $hidden;
      $menu['expanded'] = 0;
      $menu['menu_name'] = $menu_options[0];
      $menu['link_title'] = $node->title;
      $menu['link_path'] = 'node/' . $node->nid;

      $menu_parent = variable_get('menu_parent_' . $node->type);
      if (!empty($menu_parent)) {
        $split = explode(":", $menu_parent);
        if (!empty($split[1])) {
          $mlid = $split[1];
          // check that this parent menu exists
          $existing_menu = db_query("SELECT * FROM {menu_links} WHERE mlid = :mlid", array(':mlid' => $mlid))
            ->fetchObject();
          if (!empty($existing_menu) && $existing_menu->mlid === $mlid) {
            $menu['plid'] = $mlid;
            menu_link_save($menu);
            menu_cache_clear($menu['menu_name']);
          }
        }
      }
    }
  }
  return $menu;
}

/**
 * Implements hook_pathauto_punctuation_chars_alter
 */
function mica_core_pathauto_punctuation_chars_alter(array &$punctuation) {
  $punctuation['raquo'] = array('value' => 'Â»', 'name' => t('Right double angle quotes'));
}