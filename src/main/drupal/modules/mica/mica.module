<?php
/**
 * Copyright 2012(c) OBiBa, All rights reserved.
 *
 * This program and the accompanying materials are made available under the terms of the GNU Public License v3.0.
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * Implements hook_help()
 */
function mica_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mica':
      return '<p>' . t('Mica Documentation can be found here:') . '</p>'
        . '<ul>'
        . ' <li><a href="http://wiki.obiba.org/display/MICADOC/Mica+Administration+Guide">' . t('Mica Administration Guide') . '</a></li>'
        . ' <li><a href="http://wiki.obiba.org/display/MICADOC/Mica+User+Guide">' . t('Mica User Guide') . '</a></li>'
        . '</ul>';
  }
}

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function mica_block_info() {
  $blocks = array();
  $blocks['powered-by-mica'] = array(
    'info' => t('Powered by Mica'),
    'weight' => '10',
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['mica-search-filters'] = array(
    'info' => t('Search filters selection'),
    'status' => TRUE,
    'region' => 'sidebar_second',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'studies-search',
    'weight' => '1000',
  );
  $blocks['mica-search'] = array(
    'info' => t('Search'),
    'status' => FALSE,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => '',
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function mica_block_view($delta = '') {
  module_load_include('inc', 'mica', 'includes/blocks');

  global $user;
  $block = array();
  switch ($delta) {
    case 'powered-by-mica':
      $info = drupal_parse_info_file(drupal_get_path('module', 'mica_core') . '/mica_core.info');
      $version = isset($info['version']) ? str_replace('7.x-', '', $info['version']) : 'dev';
      $block['subject'] = NULL;
      $block['content'] = '<span>'
        . t('Powered by <a href="@poweredby">Mica @version</a>',
          array(
            '@poweredby' => 'http://obiba.org/node/174',
            '@version' => $version
          )
        )
        . '</span>';
      return $block;

    case 'mica-search':
      $block['subject'] = t('Search');
      $block['content'] = mica_search_block_content();
      return $block;

    case 'mica-search-filters':
      if ($user->uid == 0) {
        return NULL; // not available for anonymous user
      }
      $block['subject'] = t('Search filters selection');
      $content = mica_search_filters_block_content();
      if ($content) {
        $block['content'] = $content;
        return $block;
      }
      return;
  }
  return $block;
}

/**
 * Implements hook_preprocess_block().
 */
function mica_preprocess_block(&$variables) {
  // add block-facetapi css class to search-filters block
  if ($variables['block']->module === 'mica' && $variables['block']->delta === 'mica-search-filters') {
    $variables['classes_array'][] = 'block-facetapi';
  }
}