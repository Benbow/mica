#! /bin/bash
# postrm script for ${package_name}
#

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

if [ "$DPKG_DEBUG" = "developer" ]; then
    set -x
fi

package_name="mica-solr"
installerdir="/var/lib/${package_name}-installer/"
datadir="/var/lib/${package_name}"
nukedir="/usr/share/${package_name}/"
backupdir="${datadir}backups/"
docdir="/usr/share/doc/${package_name}/"
sqlfile="${docdir}database/database.mysql"
upgradesdir="${docdir}upgrades/"
configdir="/etc/${package_name}/"
cachedir="/var/cache/${package_name}-installer"
logdir="/var/log/${package_name}"

webserver="apache2"

case "$1" in
    purge|remove)
    
    /etc/init.d/mica-solr stop

	if [ "$1" = "purge" ]; then
      
		rm -rf ${configdir} ${datadir} ${installerdir} ${cachedir} ${docdir} ${nukedir} ${logdir}

	fi

    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section


exit 0

