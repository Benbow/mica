<?php

include_once('includes/mica_feeds.plugins.inc');

/**
 * Implements hook_help()
 */
function mica_help($path, $arg) {
  switch ($path) {
    case "admin/help#mica":
      return '<p>' . t("TODO") . '</p>';
      break;
  }
}

/**
 * Implements hook_entity_info().
 */
function mica_entity_info() {
  $info['mica_relation'] = array(
    'label' => t('Mica Relation'),
    'controller class' => 'EntityAPIController',
    'entity class' => 'MicaRelation',
    'base table' => 'mica_relation',
    'uri callback' => 'mica_relation_url',
    'module' => 'mica',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'label' => 'label',
    ),
  );
  return $info;
}

/**
 * Implements of hook_TYPE_load().
 *
 * Load search index infos from Search API
 */
function mica_mica_relation_load($entities) {
	if (empty($entities)) return;
	module_load_include('inc', 'mica', 'includes/search');
	$indexes = _mica_find_indexes_by_bundle();
	if (!empty($indexes)) {
		foreach ($entities as $entity) {
		  if (!empty($indexes[$entity->parent_bundle])) {
		  	$entity->options['parent_indexes'] = array_keys($indexes[$entity->parent_bundle]);
		  }
		  if (!empty($indexes[$entity->child_bundle])) {
		    $entity->options['child_indexes'] = array_keys($indexes[$entity->child_bundle]);
		  }	
		}
	}		
}



/**
 * Implements hook_form_FORM_ID_alter()
 */
function mica_form_node_type_form_alter(&$form, $form_state) {
  module_load_include('inc', 'mica', 'includes/relations');
  return _mica_node_type_form_alter($form, $form_state);
}

/**
 * Implements hook_node_type_delete()
 */
function mica_node_type_delete($info) {
  module_load_include('inc', 'mica', 'includes/relations');
  $relations = _mica_find_relation_by_parent_or_child($info->type);
  if (!empty($relations)) {
    foreach ($relations as $relation) {
      field_delete_field($relation->options['node_reference']);    
      watchdog('mica', 'Delete relation between parent %parent and child %child', 
        array(
          '%parent' => $relation->parent_bundle,
          '%child' => $relation->child_bundle, 
        ), WATCHDOG_INFO);      
    }
    db_delete('mica_relation')->condition('id', array_keys($relations), 'IN')->execute();
  }
}

/**
 * Implements hook_node_insert()
 */
function mica_node_insert($node) {
  module_load_include('inc', 'mica', 'includes/relations');

  $relations = _mica_find_relations_by_parent($node->type);
  if (!empty($relations)) {
    
    $parent_menu = isset($node->menu) ? $node->menu : array();
    $node = node_load($node->nid);    // reload node so it's not in 'new' state
    
    $to_save = FALSE;
    foreach ($relations as $relation) {
    	$to_save = $relation->create_child_node($node, $parent_menu);
    }
    if ($to_save) {
      node_save($node);
    }
  }
}

/**
 * Implements hook_node_update().
 */
function mica_node_update($node) {
  
  module_load_include('inc', 'mica', 'includes/relations');
  $relations = _mica_find_relations_by_parent($node->type);  
  if (!empty($relations)) {
    $parent_menu = isset($node->menu) ? $node->menu : array();
    foreach ($relations as $relation) {
    	$relation->update_child_node($node, $parent_menu);
    }
  }
}

/**
 * Implements hook_node_delete()
 */
function mica_node_delete($node) {
  module_load_include('inc', 'mica', 'includes/relations');
  $relations = _mica_find_relations_by_parent($node->type);
  if (!empty($relations)) {
    foreach ($relations as $relation) {
    	$relation->delete_child_node($node);
    }
  }
}

/**
 * Implements of hook_form_FORM_ID_alter()
 */
function mica_form_field_ui_field_edit_form_alter(&$form, $form_state, $form_id) {
  module_load_include('inc', 'mica', 'includes/variables');
  return _mica_field_settings_form_alter($form, $form_state, $form_id);
}

/**
 * Implements hook_field_delete_instance()
 */
function mica_field_delete_instance($instance) {
  module_load_include('inc', 'mica', 'includes/variables');
  _mica_delete_variable_for_field_instance($instance);
}

function mica_validate_node_type_relation($form, &$form_state) {
  module_load_include('inc', 'mica', 'includes/relations');
  _mica_validate_node_type_relation($form, $form_state);
}

function mica_edit_node_type_relation($form, &$form_state) {
  module_load_include('inc', 'mica', 'includes/relations');
  _mica_edit_node_type_relation($form, $form_state);
}