<?php
/**
 * @file
 * Code for the mica_feature feature.
 */

require_once('mica_feature.features.inc');

/**
 * Implements hook_install().
 */
function mica_feature_install() {
  _mica_import_relations();
  _mica_import_field_groups();
  _mica_import_custom_name_format();
  _mica_fix_menus();
}

function _mica_import_relations() {

  $relation = new MicaRelation();
  $relation->parent_bundle = 'study';
  $relation->child_bundle = 'study_information';
  $relation->label = 'Study » Study Information';
  $relation->options['node_reference'] = 'mica_study_information';
  $relation->options['indexed'] = TRUE;
  $relation->options['child_indexes'] = array('studies_index');
  $relation->options['cascaded'] = TRUE;
  $relation->options['relation'] = 'study_study_information';
  $relation->options['relation_parent_field'] = 'study_information_relation';
  $relation->options['relation_child_field'] = 'study_relation';
  $relation->save();

  $relation = new MicaRelation();
  $relation->parent_bundle = 'study';
  $relation->child_bundle = 'study_files';
  $relation->label = 'Study » Study Files';
  $relation->options['node_reference'] = 'mica_study_files';
  $relation->options['indexed'] = FALSE;
  $relation->options['child_indexes'] = array();
  $relation->options['cascaded'] = TRUE;
  $relation->options['relation'] = 'study_study_files';
  $relation->options['relation_parent_field'] = 'study_files_relation';
  $relation->options['relation_child_field'] = 'study_files';
  $relation->save();
}

function _mica_import_field_groups() {
  // GENERAL INFO
  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_general_info|node|study_information|form';
  $field_group->group_name = 'group_general_info';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->label = 'General Information';
  $field_group->weight = '0';
  $field_group->children = array(
    0 => 'title',
    1 => 'field_full_name',
    2 => 'field_investigator',
    3 => 'field_contact',
    4 => 'field_target_number_participants',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
  	'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);

  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_general_info|node|study_information|default';
  $field_group->group_name = 'group_general_info';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'default';
  $field_group->parent_name = '';
  $field_group->label = 'General Information';
  $field_group->weight = '0';
  $field_group->children = array(
    0 => 'field_full_name',
    1 => 'field_investigator',
    2 => 'field_contact',
    3 => 'field_target_number_participants',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);

  // METHOD
  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_method|node|study_information|form';
  $field_group->group_name = 'group_method';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->label = 'Method';
  $field_group->weight = '1';
  $field_group->children = array(
    0 => 'field_design',
    1 => 'field_design_other',
    2 => 'field_design_target',
    3 => 'field_target_other',
    4 => 'field_selection_criteria',
    5 => 'field_study_country',
    6 => 'field_gender',
    7 => 'field_age_min',
    8 => 'field_age_max',
    9 => 'field_target_number_biosamples',
    10=> 'field_biosamples_collected',
    11=> 'field_biosamples_collected_other',
    12=> 'field_biosamples_tissues',
    13=> 'field_gwas_analysis',
    14=> 'field_gwas_number',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);

  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_method|node|study_information|default';
  $field_group->group_name = 'group_method';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'default';
  $field_group->parent_name = '';
  $field_group->label = 'Method';
  $field_group->weight = '1';
  $field_group->children = array(
    0 => 'field_design',
    1 => 'field_design_other',
    2 => 'field_design_target',
    3 => 'field_target_other',
    4 => 'field_selection_criteria',
    5 => 'field_study_country',
    6 => 'field_gender',
    7 => 'field_age_min',
    8 => 'field_age_max',
    9 => 'field_target_number_biosamples',
    10=> 'field_biosamples_collected',
    11=> 'field_biosamples_collected_other',
    12=> 'field_biosamples_tissues',
    13=> 'field_gwas_analysis',
    14=> 'field_gwas_number',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
  ),
  );
  field_group_save($field_group);

  // GOVERNANCE
  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_governance|node|study_information|form';
  $field_group->group_name = 'group_governance';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->label = 'Governance';
  $field_group->weight = '2';
  $field_group->children = array(
    0 => 'field_access',
    1 => 'field_access_other',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
  ),
  );
  field_group_save($field_group);

  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_governance|node|study_information|default';
  $field_group->group_name = 'group_governance';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'default';
  $field_group->parent_name = '';
  $field_group->label = 'Governance';
  $field_group->weight = '2';
  $field_group->children = array(
    0 => 'field_access',
    1 => 'field_access_other',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);

  // STATUS
  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_status|node|study_information|form';
  $field_group->group_name = 'group_status';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'form';
  $field_group->parent_name = '';
  $field_group->label = 'Status';
  $field_group->weight = '3';
  $field_group->children = array(
    0 => 'field_status_start',
    1 => 'field_status_end',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);

  $field_group = new stdClass;
  $field_group->api_version = 1;
  $field_group->identifier = 'group_status|node|study_information|default';
  $field_group->group_name = 'group_status';
  $field_group->entity_type = 'node';
  $field_group->bundle = 'study_information';
  $field_group->mode = 'default';
  $field_group->parent_name = '';
  $field_group->label = 'Status';
  $field_group->weight = '3';
  $field_group->children = array(
    0 => 'field_status_start',
    1 => 'field_status_end',
  );
  $field_group->format_type = 'fieldset';
  $field_group->format_settings = array(
    'formatter' => 'collapsible',
    'instance_settings' => array(
      'classes' => '',
      'required_fields' => 1,
    ),
  );
  field_group_save($field_group);
}

function _mica_import_custom_name_format(){
  // add custom field format for name until next release of views
  $custom_format = array(
    'name' => 'Title',
  	'machine_name' => 'title',
  	'format' => 't',
  );
  drupal_write_record('name_custom_format', $custom_format);
} 

function _mica_fix_menus() {
  // fix community path as feature does not support severals menus with same path
  $num_updated = db_update('menu_links')
    ->fields(array(
      'link_path' => '<firstchild>',
      'router_path' => '<firstchild>',
      ))  
    ->condition('menu_name', 'main-menu')
  	->condition('link_title', t('Community'))
  	->execute();
}

